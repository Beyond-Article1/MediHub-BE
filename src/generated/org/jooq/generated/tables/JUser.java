/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.generated.JMedihub;
import org.jooq.generated.Keys;
import org.jooq.generated.enums.UserUserAuth;
import org.jooq.generated.enums.UserUserStatus;
import org.jooq.generated.tables.JAnonymousBoard.AnonymousBoardPath;
import org.jooq.generated.tables.JBookmark.BookmarkPath;
import org.jooq.generated.tables.JCaseSharing.CaseSharingPath;
import org.jooq.generated.tables.JCaseSharingComment.CaseSharingCommentPath;
import org.jooq.generated.tables.JChat.ChatPath;
import org.jooq.generated.tables.JComment.CommentPath;
import org.jooq.generated.tables.JFollow.FollowPath;
import org.jooq.generated.tables.JJournalSearch.JournalSearchPath;
import org.jooq.generated.tables.JMedicalLife.MedicalLifePath;
import org.jooq.generated.tables.JNotify.NotifyPath;
import org.jooq.generated.tables.JPart.PartPath;
import org.jooq.generated.tables.JPrefer.PreferPath;
import org.jooq.generated.tables.JRanking.RankingPath;
import org.jooq.generated.tables.JTemplate.TemplatePath;
import org.jooq.generated.tables.records.UserRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JUser extends TableImpl<UserRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>medihub.user</code>
     */
    public static final JUser USER = new JUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRecord> getRecordType() {
        return UserRecord.class;
    }

    /**
     * The column <code>medihub.user.user_seq</code>.
     */
    public final TableField<UserRecord, Long> USER_SEQ = createField(DSL.name("user_seq"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>medihub.user.created_at</code>.
     */
    public final TableField<UserRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>medihub.user.deleted_at</code>.
     */
    public final TableField<UserRecord, LocalDateTime> DELETED_AT = createField(DSL.name("deleted_at"), SQLDataType.LOCALDATETIME(6).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>medihub.user.updated_at</code>.
     */
    public final TableField<UserRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(6).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>medihub.user.user_auth</code>.
     */
    public final TableField<UserRecord, UserUserAuth> USER_AUTH = createField(DSL.name("user_auth"), SQLDataType.VARCHAR(5).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)).asEnumDataType(UserUserAuth.class), this, "");

    /**
     * The column <code>medihub.user.user_email</code>.
     */
    public final TableField<UserRecord, String> USER_EMAIL = createField(DSL.name("user_email"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>medihub.user.user_id</code>.
     */
    public final TableField<UserRecord, String> USER_ID = createField(DSL.name("user_id"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>medihub.user.user_name</code>.
     */
    public final TableField<UserRecord, String> USER_NAME = createField(DSL.name("user_name"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>medihub.user.user_password</code>.
     */
    public final TableField<UserRecord, String> USER_PASSWORD = createField(DSL.name("user_password"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>medihub.user.user_phone</code>.
     */
    public final TableField<UserRecord, String> USER_PHONE = createField(DSL.name("user_phone"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>medihub.user.user_status</code>.
     */
    public final TableField<UserRecord, UserUserStatus> USER_STATUS = createField(DSL.name("user_status"), SQLDataType.VARCHAR(6).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)).asEnumDataType(UserUserStatus.class), this, "");

    /**
     * The column <code>medihub.user.part_seq</code>.
     */
    public final TableField<UserRecord, Long> PART_SEQ = createField(DSL.name("part_seq"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>medihub.user.ranking_seq</code>.
     */
    public final TableField<UserRecord, Long> RANKING_SEQ = createField(DSL.name("ranking_seq"), SQLDataType.BIGINT.nullable(false), this, "");

    private JUser(Name alias, Table<UserRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private JUser(Name alias, Table<UserRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>medihub.user</code> table reference
     */
    public JUser(String alias) {
        this(DSL.name(alias), USER);
    }

    /**
     * Create an aliased <code>medihub.user</code> table reference
     */
    public JUser(Name alias) {
        this(alias, USER);
    }

    /**
     * Create a <code>medihub.user</code> table reference
     */
    public JUser() {
        this(DSL.name("user"), null);
    }

    public <O extends Record> JUser(Table<O> path, ForeignKey<O, UserRecord> childPath, InverseForeignKey<O, UserRecord> parentPath) {
        super(path, childPath, parentPath, USER);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class UserPath extends JUser implements Path<UserRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> UserPath(Table<O> path, ForeignKey<O, UserRecord> childPath, InverseForeignKey<O, UserRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private UserPath(Name alias, Table<UserRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public UserPath as(String alias) {
            return new UserPath(DSL.name(alias), this);
        }

        @Override
        public UserPath as(Name alias) {
            return new UserPath(alias, this);
        }

        @Override
        public UserPath as(Table<?> alias) {
            return new UserPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JMedihub.MEDIHUB;
    }

    @Override
    public Identity<UserRecord, Long> getIdentity() {
        return (Identity<UserRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<UserRecord> getPrimaryKey() {
        return Keys.KEY_USER_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_USER_UKA3IMLF41L37UTMXIQUUKK8AJC);
    }

    @Override
    public List<ForeignKey<UserRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK83755D2A40VEIG3NR8D96CE8S, Keys.FKO1YYRBI2OTTUXO2ROHOV35S8Q);
    }

    private transient RankingPath _ranking;

    /**
     * Get the implicit join path to the <code>medihub.ranking</code> table.
     */
    public RankingPath ranking() {
        if (_ranking == null)
            _ranking = new RankingPath(this, Keys.FK83755D2A40VEIG3NR8D96CE8S, null);

        return _ranking;
    }

    private transient PartPath _part;

    /**
     * Get the implicit join path to the <code>medihub.part</code> table.
     */
    public PartPath part() {
        if (_part == null)
            _part = new PartPath(this, Keys.FKO1YYRBI2OTTUXO2ROHOV35S8Q, null);

        return _part;
    }

    private transient MedicalLifePath _medicalLife;

    /**
     * Get the implicit to-many join path to the
     * <code>medihub.medical_life</code> table
     */
    public MedicalLifePath medicalLife() {
        if (_medicalLife == null)
            _medicalLife = new MedicalLifePath(this, null, Keys.FK4IXM94NJ6NXCMNOOWL0WS8IOV.getInverseKey());

        return _medicalLife;
    }

    private transient CaseSharingPath _caseSharing;

    /**
     * Get the implicit to-many join path to the
     * <code>medihub.case_sharing</code> table
     */
    public CaseSharingPath caseSharing() {
        if (_caseSharing == null)
            _caseSharing = new CaseSharingPath(this, null, Keys.FK6I0YQPN0J36CBOS886NCI05FJ.getInverseKey());

        return _caseSharing;
    }

    private transient PreferPath _prefer;

    /**
     * Get the implicit to-many join path to the <code>medihub.prefer</code>
     * table
     */
    public PreferPath prefer() {
        if (_prefer == null)
            _prefer = new PreferPath(this, null, Keys.FK9XLDB9EIRMVD0UTTB3ATTLN73.getInverseKey());

        return _prefer;
    }

    private transient BookmarkPath _bookmark;

    /**
     * Get the implicit to-many join path to the <code>medihub.bookmark</code>
     * table
     */
    public BookmarkPath bookmark() {
        if (_bookmark == null)
            _bookmark = new BookmarkPath(this, null, Keys.FKDIOFORSYBMBSYBYS952JABR7B.getInverseKey());

        return _bookmark;
    }

    private transient TemplatePath _template;

    /**
     * Get the implicit to-many join path to the <code>medihub.template</code>
     * table
     */
    public TemplatePath template() {
        if (_template == null)
            _template = new TemplatePath(this, null, Keys.FKFS2KGGRMBYH5TRR1HKTULICXH.getInverseKey());

        return _template;
    }

    private transient CommentPath _comment;

    /**
     * Get the implicit to-many join path to the <code>medihub.comment</code>
     * table
     */
    public CommentPath comment() {
        if (_comment == null)
            _comment = new CommentPath(this, null, Keys.FKM3LBKSC4VEX8FH6IHX90WCB3B.getInverseKey());

        return _comment;
    }

    private transient JournalSearchPath _journalSearch;

    /**
     * Get the implicit to-many join path to the
     * <code>medihub.journal_search</code> table
     */
    public JournalSearchPath journalSearch() {
        if (_journalSearch == null)
            _journalSearch = new JournalSearchPath(this, null, Keys.FKMV4OM6DI160KT2N0P88VWV5WW.getInverseKey());

        return _journalSearch;
    }

    private transient NotifyPath _notify_;

    /**
     * Get the implicit to-many join path to the <code>medihub.notify</code>
     * table
     */
    public NotifyPath notify_() {
        if (_notify_ == null)
            _notify_ = new NotifyPath(this, null, Keys.FKNCYR447UELDA64ISI8KBDE5C9.getInverseKey());

        return _notify_;
    }

    private transient FollowPath _fkp0enbhv2bxxk5icfa80wtuphs;

    /**
     * Get the implicit to-many join path to the <code>medihub.follow</code>
     * table, via the <code>FKp0enbhv2bxxk5icfa80wtuphs</code> key
     */
    public FollowPath fkp0enbhv2bxxk5icfa80wtuphs() {
        if (_fkp0enbhv2bxxk5icfa80wtuphs == null)
            _fkp0enbhv2bxxk5icfa80wtuphs = new FollowPath(this, null, Keys.FKP0ENBHV2BXXK5ICFA80WTUPHS.getInverseKey());

        return _fkp0enbhv2bxxk5icfa80wtuphs;
    }

    private transient AnonymousBoardPath _anonymousBoard;

    /**
     * Get the implicit to-many join path to the
     * <code>medihub.anonymous_board</code> table
     */
    public AnonymousBoardPath anonymousBoard() {
        if (_anonymousBoard == null)
            _anonymousBoard = new AnonymousBoardPath(this, null, Keys.FKP7MW3D7RB4HHIX2R1A3LQXA0O.getInverseKey());

        return _anonymousBoard;
    }

    private transient FollowPath _fkq274ugfwmejcgaxo77akien5g;

    /**
     * Get the implicit to-many join path to the <code>medihub.follow</code>
     * table, via the <code>FKq274ugfwmejcgaxo77akien5g</code> key
     */
    public FollowPath fkq274ugfwmejcgaxo77akien5g() {
        if (_fkq274ugfwmejcgaxo77akien5g == null)
            _fkq274ugfwmejcgaxo77akien5g = new FollowPath(this, null, Keys.FKQ274UGFWMEJCGAXO77AKIEN5G.getInverseKey());

        return _fkq274ugfwmejcgaxo77akien5g;
    }

    private transient ChatPath _chat;

    /**
     * Get the implicit to-many join path to the <code>medihub.chat</code> table
     */
    public ChatPath chat() {
        if (_chat == null)
            _chat = new ChatPath(this, null, Keys.FKS2MTMSBS4FN42FLQEGGUXLHUM.getInverseKey());

        return _chat;
    }

    private transient CaseSharingCommentPath _caseSharingComment;

    /**
     * Get the implicit to-many join path to the
     * <code>medihub.case_sharing_comment</code> table
     */
    public CaseSharingCommentPath caseSharingComment() {
        if (_caseSharingComment == null)
            _caseSharingComment = new CaseSharingCommentPath(this, null, Keys.FKT3A3UVFN0828VATF15QTHK40K.getInverseKey());

        return _caseSharingComment;
    }

    @Override
    public JUser as(String alias) {
        return new JUser(DSL.name(alias), this);
    }

    @Override
    public JUser as(Name alias) {
        return new JUser(alias, this);
    }

    @Override
    public JUser as(Table<?> alias) {
        return new JUser(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public JUser rename(String name) {
        return new JUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JUser rename(Name name) {
        return new JUser(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public JUser rename(Table<?> name) {
        return new JUser(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public JUser where(Condition condition) {
        return new JUser(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public JUser where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public JUser where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public JUser where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public JUser where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public JUser where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public JUser where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public JUser where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public JUser whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public JUser whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
