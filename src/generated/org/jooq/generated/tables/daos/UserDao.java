/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.enums.UserUserAuth;
import org.jooq.generated.enums.UserUserStatus;
import org.jooq.generated.tables.User;
import org.jooq.generated.tables.records.UserRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDao extends DAOImpl<UserRecord, org.jooq.generated.tables.pojos.User, Long> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, org.jooq.generated.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    public UserDao(Configuration configuration) {
        super(User.USER, org.jooq.generated.tables.pojos.User.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.User object) {
        return object.getUserSeq();
    }

    /**
     * Fetch records that have <code>user_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfUserSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(User.USER.USER_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_seq IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByUserSeq(Long... values) {
        return fetch(User.USER.USER_SEQ, values);
    }

    /**
     * Fetch a unique record that has <code>user_seq = value</code>
     */
    public org.jooq.generated.tables.pojos.User fetchOneByUserSeq(Long value) {
        return fetchOne(User.USER.USER_SEQ, value);
    }

    /**
     * Fetch a unique record that has <code>user_seq = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.User> fetchOptionalByUserSeq(Long value) {
        return fetchOptional(User.USER.USER_SEQ, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(User.USER.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfDeletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.DELETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByDeletedAt(LocalDateTime... values) {
        return fetch(User.USER.DELETED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(User.USER.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>user_auth BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfUserAuth(UserUserAuth lowerInclusive, UserUserAuth upperInclusive) {
        return fetchRange(User.USER.USER_AUTH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_auth IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByUserAuth(UserUserAuth... values) {
        return fetch(User.USER.USER_AUTH, values);
    }

    /**
     * Fetch records that have <code>user_email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfUserEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USER_EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_email IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByUserEmail(String... values) {
        return fetch(User.USER.USER_EMAIL, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfUserId(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByUserId(String... values) {
        return fetch(User.USER.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public org.jooq.generated.tables.pojos.User fetchOneByUserId(String value) {
        return fetchOne(User.USER.USER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.User> fetchOptionalByUserId(String value) {
        return fetchOptional(User.USER.USER_ID, value);
    }

    /**
     * Fetch records that have <code>user_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByUserName(String... values) {
        return fetch(User.USER.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>user_password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfUserPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USER_PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_password IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByUserPassword(String... values) {
        return fetch(User.USER.USER_PASSWORD, values);
    }

    /**
     * Fetch records that have <code>user_phone BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfUserPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USER_PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_phone IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByUserPhone(String... values) {
        return fetch(User.USER.USER_PHONE, values);
    }

    /**
     * Fetch records that have <code>user_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfUserStatus(UserUserStatus lowerInclusive, UserUserStatus upperInclusive) {
        return fetchRange(User.USER.USER_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_status IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByUserStatus(UserUserStatus... values) {
        return fetch(User.USER.USER_STATUS, values);
    }

    /**
     * Fetch records that have <code>part_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfPartSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(User.USER.PART_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>part_seq IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByPartSeq(Long... values) {
        return fetch(User.USER.PART_SEQ, values);
    }

    /**
     * Fetch records that have <code>ranking_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchRangeOfRankingSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(User.USER.RANKING_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ranking_seq IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.User> fetchByRankingSeq(Long... values) {
        return fetch(User.USER.RANKING_SEQ, values);
    }
}
