/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.CaseSharingGroup;
import org.jooq.generated.tables.records.CaseSharingGroupRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CaseSharingGroupDao extends DAOImpl<CaseSharingGroupRecord, org.jooq.generated.tables.pojos.CaseSharingGroup, Long> {

    /**
     * Create a new CaseSharingGroupDao without any configuration
     */
    public CaseSharingGroupDao() {
        super(CaseSharingGroup.CASE_SHARING_GROUP, org.jooq.generated.tables.pojos.CaseSharingGroup.class);
    }

    /**
     * Create a new CaseSharingGroupDao with an attached configuration
     */
    public CaseSharingGroupDao(Configuration configuration) {
        super(CaseSharingGroup.CASE_SHARING_GROUP, org.jooq.generated.tables.pojos.CaseSharingGroup.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.CaseSharingGroup object) {
        return object.getCaseSharingGroupSeq();
    }

    /**
     * Fetch records that have <code>case_sharing_group_seq BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CaseSharingGroup> fetchRangeOfCaseSharingGroupSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CaseSharingGroup.CASE_SHARING_GROUP.CASE_SHARING_GROUP_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>case_sharing_group_seq IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CaseSharingGroup> fetchByCaseSharingGroupSeq(Long... values) {
        return fetch(CaseSharingGroup.CASE_SHARING_GROUP.CASE_SHARING_GROUP_SEQ, values);
    }

    /**
     * Fetch a unique record that has <code>case_sharing_group_seq =
     * value</code>
     */
    public org.jooq.generated.tables.pojos.CaseSharingGroup fetchOneByCaseSharingGroupSeq(Long value) {
        return fetchOne(CaseSharingGroup.CASE_SHARING_GROUP.CASE_SHARING_GROUP_SEQ, value);
    }

    /**
     * Fetch a unique record that has <code>case_sharing_group_seq =
     * value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.CaseSharingGroup> fetchOptionalByCaseSharingGroupSeq(Long value) {
        return fetchOptional(CaseSharingGroup.CASE_SHARING_GROUP.CASE_SHARING_GROUP_SEQ, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CaseSharingGroup> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CaseSharingGroup.CASE_SHARING_GROUP.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CaseSharingGroup> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(CaseSharingGroup.CASE_SHARING_GROUP.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CaseSharingGroup> fetchRangeOfDeletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CaseSharingGroup.CASE_SHARING_GROUP.DELETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CaseSharingGroup> fetchByDeletedAt(LocalDateTime... values) {
        return fetch(CaseSharingGroup.CASE_SHARING_GROUP.DELETED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.CaseSharingGroup> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CaseSharingGroup.CASE_SHARING_GROUP.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.CaseSharingGroup> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(CaseSharingGroup.CASE_SHARING_GROUP.UPDATED_AT, values);
    }
}
