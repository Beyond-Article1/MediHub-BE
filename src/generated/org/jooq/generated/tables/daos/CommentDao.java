/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.Comment;
import org.jooq.generated.tables.records.CommentRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentDao extends DAOImpl<CommentRecord, org.jooq.generated.tables.pojos.Comment, Long> {

    /**
     * Create a new CommentDao without any configuration
     */
    public CommentDao() {
        super(Comment.COMMENT, org.jooq.generated.tables.pojos.Comment.class);
    }

    /**
     * Create a new CommentDao with an attached configuration
     */
    public CommentDao(Configuration configuration) {
        super(Comment.COMMENT, org.jooq.generated.tables.pojos.Comment.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.Comment object) {
        return object.getCommentSeq();
    }

    /**
     * Fetch records that have <code>comment_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchRangeOfCommentSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Comment.COMMENT.COMMENT_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment_seq IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchByCommentSeq(Long... values) {
        return fetch(Comment.COMMENT.COMMENT_SEQ, values);
    }

    /**
     * Fetch a unique record that has <code>comment_seq = value</code>
     */
    public org.jooq.generated.tables.pojos.Comment fetchOneByCommentSeq(Long value) {
        return fetchOne(Comment.COMMENT.COMMENT_SEQ, value);
    }

    /**
     * Fetch a unique record that has <code>comment_seq = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.Comment> fetchOptionalByCommentSeq(Long value) {
        return fetchOptional(Comment.COMMENT.COMMENT_SEQ, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Comment.COMMENT.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Comment.COMMENT.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchRangeOfDeletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Comment.COMMENT.DELETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchByDeletedAt(LocalDateTime... values) {
        return fetch(Comment.COMMENT.DELETED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Comment.COMMENT.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Comment.COMMENT.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>comment_content BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchRangeOfCommentContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(Comment.COMMENT.COMMENT_CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment_content IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchByCommentContent(String... values) {
        return fetch(Comment.COMMENT.COMMENT_CONTENT, values);
    }

    /**
     * Fetch records that have <code>comment_is_deleted BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchRangeOfCommentIsDeleted(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Comment.COMMENT.COMMENT_IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment_is_deleted IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchByCommentIsDeleted(Boolean... values) {
        return fetch(Comment.COMMENT.COMMENT_IS_DELETED, values);
    }

    /**
     * Fetch records that have <code>flag_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchRangeOfFlagSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Comment.COMMENT.FLAG_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>flag_seq IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchByFlagSeq(Long... values) {
        return fetch(Comment.COMMENT.FLAG_SEQ, values);
    }

    /**
     * Fetch records that have <code>user_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchRangeOfUserSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Comment.COMMENT.USER_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_seq IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Comment> fetchByUserSeq(Long... values) {
        return fetch(Comment.COMMENT.USER_SEQ, values);
    }
}
