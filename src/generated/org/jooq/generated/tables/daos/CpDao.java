/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JCp;
import org.jooq.generated.tables.pojos.Cp;
import org.jooq.generated.tables.records.CpRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CpDao extends DAOImpl<CpRecord, Cp, Long> {

    /**
     * Create a new CpDao without any configuration
     */
    public CpDao() {
        super(JCp.CP, Cp.class);
    }

    /**
     * Create a new CpDao with an attached configuration
     */
    public CpDao(Configuration configuration) {
        super(JCp.CP, Cp.class, configuration);
    }

    @Override
    public Long getId(Cp object) {
        return object.getCpSeq();
    }

    /**
     * Fetch records that have <code>cp_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Cp> fetchRangeOfJCpSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCp.CP.CP_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cp_seq IN (values)</code>
     */
    public List<Cp> fetchByJCpSeq(Long... values) {
        return fetch(JCp.CP.CP_SEQ, values);
    }

    /**
     * Fetch a unique record that has <code>cp_seq = value</code>
     */
    public Cp fetchOneByJCpSeq(Long value) {
        return fetchOne(JCp.CP.CP_SEQ, value);
    }

    /**
     * Fetch a unique record that has <code>cp_seq = value</code>
     */
    public Optional<Cp> fetchOptionalByJCpSeq(Long value) {
        return fetchOptional(JCp.CP.CP_SEQ, value);
    }

    /**
     * Fetch records that have <code>cp_description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Cp> fetchRangeOfJCpDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(JCp.CP.CP_DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cp_description IN (values)</code>
     */
    public List<Cp> fetchByJCpDescription(String... values) {
        return fetch(JCp.CP.CP_DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>cp_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Cp> fetchRangeOfJCpName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JCp.CP.CP_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cp_name IN (values)</code>
     */
    public List<Cp> fetchByJCpName(String... values) {
        return fetch(JCp.CP.CP_NAME, values);
    }

    /**
     * Fetch records that have <code>cp_view_count BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Cp> fetchRangeOfJCpViewCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCp.CP.CP_VIEW_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cp_view_count IN (values)</code>
     */
    public List<Cp> fetchByJCpViewCount(Long... values) {
        return fetch(JCp.CP.CP_VIEW_COUNT, values);
    }

    /**
     * Fetch records that have <code>user_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Cp> fetchRangeOfJUserSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCp.CP.USER_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_seq IN (values)</code>
     */
    public List<Cp> fetchByJUserSeq(Long... values) {
        return fetch(JCp.CP.USER_SEQ, values);
    }
}
