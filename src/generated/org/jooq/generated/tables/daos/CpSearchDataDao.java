/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JCpSearchData;
import org.jooq.generated.tables.pojos.CpSearchData;
import org.jooq.generated.tables.records.CpSearchDataRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CpSearchDataDao extends DAOImpl<CpSearchDataRecord, CpSearchData, Long> {

    /**
     * Create a new CpSearchDataDao without any configuration
     */
    public CpSearchDataDao() {
        super(JCpSearchData.CP_SEARCH_DATA, CpSearchData.class);
    }

    /**
     * Create a new CpSearchDataDao with an attached configuration
     */
    public CpSearchDataDao(Configuration configuration) {
        super(JCpSearchData.CP_SEARCH_DATA, CpSearchData.class, configuration);
    }

    @Override
    public Long getId(CpSearchData object) {
        return object.getCpSearchDataSeq();
    }

    /**
     * Fetch records that have <code>cp_search_data_seq BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<CpSearchData> fetchRangeOfJCpSearchDataSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCpSearchData.CP_SEARCH_DATA.CP_SEARCH_DATA_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cp_search_data_seq IN (values)</code>
     */
    public List<CpSearchData> fetchByJCpSearchDataSeq(Long... values) {
        return fetch(JCpSearchData.CP_SEARCH_DATA.CP_SEARCH_DATA_SEQ, values);
    }

    /**
     * Fetch a unique record that has <code>cp_search_data_seq = value</code>
     */
    public CpSearchData fetchOneByJCpSearchDataSeq(Long value) {
        return fetchOne(JCpSearchData.CP_SEARCH_DATA.CP_SEARCH_DATA_SEQ, value);
    }

    /**
     * Fetch a unique record that has <code>cp_search_data_seq = value</code>
     */
    public Optional<CpSearchData> fetchOptionalByJCpSearchDataSeq(Long value) {
        return fetchOptional(JCpSearchData.CP_SEARCH_DATA.CP_SEARCH_DATA_SEQ, value);
    }

    /**
     * Fetch records that have <code>cp_search_category_data_seq BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<CpSearchData> fetchRangeOfJCpSearchCategoryDataSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCpSearchData.CP_SEARCH_DATA.CP_SEARCH_CATEGORY_DATA_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cp_search_category_data_seq IN
     * (values)</code>
     */
    public List<CpSearchData> fetchByJCpSearchCategoryDataSeq(Long... values) {
        return fetch(JCpSearchData.CP_SEARCH_DATA.CP_SEARCH_CATEGORY_DATA_SEQ, values);
    }

    /**
     * Fetch records that have <code>cp_version_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<CpSearchData> fetchRangeOfJCpVersionSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCpSearchData.CP_SEARCH_DATA.CP_VERSION_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cp_version_seq IN (values)</code>
     */
    public List<CpSearchData> fetchByJCpVersionSeq(Long... values) {
        return fetch(JCpSearchData.CP_SEARCH_DATA.CP_VERSION_SEQ, values);
    }
}
