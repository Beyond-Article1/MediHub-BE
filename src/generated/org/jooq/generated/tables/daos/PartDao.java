/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JPart;
import org.jooq.generated.tables.pojos.Part;
import org.jooq.generated.tables.records.PartRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartDao extends DAOImpl<PartRecord, Part, Long> {

    /**
     * Create a new PartDao without any configuration
     */
    public PartDao() {
        super(JPart.PART, Part.class);
    }

    /**
     * Create a new PartDao with an attached configuration
     */
    public PartDao(Configuration configuration) {
        super(JPart.PART, Part.class, configuration);
    }

    @Override
    public Long getId(Part object) {
        return object.getPartSeq();
    }

    /**
     * Fetch records that have <code>part_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Part> fetchRangeOfJPartSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JPart.PART.PART_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>part_seq IN (values)</code>
     */
    public List<Part> fetchByJPartSeq(Long... values) {
        return fetch(JPart.PART.PART_SEQ, values);
    }

    /**
     * Fetch a unique record that has <code>part_seq = value</code>
     */
    public Part fetchOneByJPartSeq(Long value) {
        return fetchOne(JPart.PART.PART_SEQ, value);
    }

    /**
     * Fetch a unique record that has <code>part_seq = value</code>
     */
    public Optional<Part> fetchOptionalByJPartSeq(Long value) {
        return fetchOptional(JPart.PART.PART_SEQ, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Part> fetchRangeOfJCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JPart.PART.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<Part> fetchByJCreatedAt(LocalDateTime... values) {
        return fetch(JPart.PART.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Part> fetchRangeOfJDeletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JPart.PART.DELETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    public List<Part> fetchByJDeletedAt(LocalDateTime... values) {
        return fetch(JPart.PART.DELETED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Part> fetchRangeOfJUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JPart.PART.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<Part> fetchByJUpdatedAt(LocalDateTime... values) {
        return fetch(JPart.PART.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>part_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Part> fetchRangeOfJPartName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JPart.PART.PART_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>part_name IN (values)</code>
     */
    public List<Part> fetchByJPartName(String... values) {
        return fetch(JPart.PART.PART_NAME, values);
    }

    /**
     * Fetch records that have <code>dept_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Part> fetchRangeOfJDeptSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JPart.PART.DEPT_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dept_seq IN (values)</code>
     */
    public List<Part> fetchByJDeptSeq(Long... values) {
        return fetch(JPart.PART.DEPT_SEQ, values);
    }
}
