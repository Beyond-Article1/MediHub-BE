/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JCaseSharing;
import org.jooq.generated.tables.pojos.CaseSharing;
import org.jooq.generated.tables.records.CaseSharingRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CaseSharingDao extends DAOImpl<CaseSharingRecord, CaseSharing, Long> {

    /**
     * Create a new CaseSharingDao without any configuration
     */
    public CaseSharingDao() {
        super(JCaseSharing.CASE_SHARING, CaseSharing.class);
    }

    /**
     * Create a new CaseSharingDao with an attached configuration
     */
    public CaseSharingDao(Configuration configuration) {
        super(JCaseSharing.CASE_SHARING, CaseSharing.class, configuration);
    }

    @Override
    public Long getId(CaseSharing object) {
        return object.getCaseSharingSeq();
    }

    /**
     * Fetch records that have <code>case_sharing_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJCaseSharingSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.CASE_SHARING_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>case_sharing_seq IN (values)</code>
     */
    public List<CaseSharing> fetchByJCaseSharingSeq(Long... values) {
        return fetch(JCaseSharing.CASE_SHARING.CASE_SHARING_SEQ, values);
    }

    /**
     * Fetch a unique record that has <code>case_sharing_seq = value</code>
     */
    public CaseSharing fetchOneByJCaseSharingSeq(Long value) {
        return fetchOne(JCaseSharing.CASE_SHARING.CASE_SHARING_SEQ, value);
    }

    /**
     * Fetch a unique record that has <code>case_sharing_seq = value</code>
     */
    public Optional<CaseSharing> fetchOptionalByJCaseSharingSeq(Long value) {
        return fetchOptional(JCaseSharing.CASE_SHARING.CASE_SHARING_SEQ, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<CaseSharing> fetchByJCreatedAt(LocalDateTime... values) {
        return fetch(JCaseSharing.CASE_SHARING.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJDeletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.DELETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    public List<CaseSharing> fetchByJDeletedAt(LocalDateTime... values) {
        return fetch(JCaseSharing.CASE_SHARING.DELETED_AT, values);
    }

    /**
     * Fetch records that have <code>case_sharing_content BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJCaseSharingContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.CASE_SHARING_CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>case_sharing_content IN (values)</code>
     */
    public List<CaseSharing> fetchByJCaseSharingContent(String... values) {
        return fetch(JCaseSharing.CASE_SHARING.CASE_SHARING_CONTENT, values);
    }

    /**
     * Fetch records that have <code>case_sharing_is_draft BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJCaseSharingIsDraft(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.CASE_SHARING_IS_DRAFT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>case_sharing_is_draft IN (values)</code>
     */
    public List<CaseSharing> fetchByJCaseSharingIsDraft(Boolean... values) {
        return fetch(JCaseSharing.CASE_SHARING.CASE_SHARING_IS_DRAFT, values);
    }

    /**
     * Fetch records that have <code>case_sharing_is_latest BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJCaseSharingIsLatest(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.CASE_SHARING_IS_LATEST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>case_sharing_is_latest IN (values)</code>
     */
    public List<CaseSharing> fetchByJCaseSharingIsLatest(Boolean... values) {
        return fetch(JCaseSharing.CASE_SHARING.CASE_SHARING_IS_LATEST, values);
    }

    /**
     * Fetch records that have <code>case_sharing_title BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJCaseSharingTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.CASE_SHARING_TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>case_sharing_title IN (values)</code>
     */
    public List<CaseSharing> fetchByJCaseSharingTitle(String... values) {
        return fetch(JCaseSharing.CASE_SHARING.CASE_SHARING_TITLE, values);
    }

    /**
     * Fetch records that have <code>case_sharing_view_count BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJCaseSharingViewCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.CASE_SHARING_VIEW_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>case_sharing_view_count IN (values)</code>
     */
    public List<CaseSharing> fetchByJCaseSharingViewCount(Long... values) {
        return fetch(JCaseSharing.CASE_SHARING.CASE_SHARING_VIEW_COUNT, values);
    }

    /**
     * Fetch records that have <code>case_sharing_group_seq BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJCaseSharingGroupSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.CASE_SHARING_GROUP_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>case_sharing_group_seq IN (values)</code>
     */
    public List<CaseSharing> fetchByJCaseSharingGroupSeq(Long... values) {
        return fetch(JCaseSharing.CASE_SHARING.CASE_SHARING_GROUP_SEQ, values);
    }

    /**
     * Fetch records that have <code>part_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJPartSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.PART_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>part_seq IN (values)</code>
     */
    public List<CaseSharing> fetchByJPartSeq(Long... values) {
        return fetch(JCaseSharing.CASE_SHARING.PART_SEQ, values);
    }

    /**
     * Fetch records that have <code>template_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJTemplateSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.TEMPLATE_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>template_seq IN (values)</code>
     */
    public List<CaseSharing> fetchByJTemplateSeq(Long... values) {
        return fetch(JCaseSharing.CASE_SHARING.TEMPLATE_SEQ, values);
    }

    /**
     * Fetch records that have <code>user_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<CaseSharing> fetchRangeOfJUserSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JCaseSharing.CASE_SHARING.USER_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_seq IN (values)</code>
     */
    public List<CaseSharing> fetchByJUserSeq(Long... values) {
        return fetch(JCaseSharing.CASE_SHARING.USER_SEQ, values);
    }
}
