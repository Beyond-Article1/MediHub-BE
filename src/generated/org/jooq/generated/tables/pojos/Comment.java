/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Comment implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long commentSeq;
    private LocalDateTime createdAt;
    private LocalDateTime deletedAt;
    private LocalDateTime updatedAt;
    private String commentContent;
    private Boolean commentIsDeleted;
    private Long flagSeq;
    private Long userSeq;

    public Comment() {}

    public Comment(Comment value) {
        this.commentSeq = value.commentSeq;
        this.createdAt = value.createdAt;
        this.deletedAt = value.deletedAt;
        this.updatedAt = value.updatedAt;
        this.commentContent = value.commentContent;
        this.commentIsDeleted = value.commentIsDeleted;
        this.flagSeq = value.flagSeq;
        this.userSeq = value.userSeq;
    }

    public Comment(
        Long commentSeq,
        LocalDateTime createdAt,
        LocalDateTime deletedAt,
        LocalDateTime updatedAt,
        String commentContent,
        Boolean commentIsDeleted,
        Long flagSeq,
        Long userSeq
    ) {
        this.commentSeq = commentSeq;
        this.createdAt = createdAt;
        this.deletedAt = deletedAt;
        this.updatedAt = updatedAt;
        this.commentContent = commentContent;
        this.commentIsDeleted = commentIsDeleted;
        this.flagSeq = flagSeq;
        this.userSeq = userSeq;
    }

    /**
     * Getter for <code>medihub.comment.comment_seq</code>.
     */
    public Long getCommentSeq() {
        return this.commentSeq;
    }

    /**
     * Setter for <code>medihub.comment.comment_seq</code>.
     */
    public Comment setCommentSeq(Long commentSeq) {
        this.commentSeq = commentSeq;
        return this;
    }

    /**
     * Getter for <code>medihub.comment.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>medihub.comment.created_at</code>.
     */
    public Comment setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>medihub.comment.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    /**
     * Setter for <code>medihub.comment.deleted_at</code>.
     */
    public Comment setDeletedAt(LocalDateTime deletedAt) {
        this.deletedAt = deletedAt;
        return this;
    }

    /**
     * Getter for <code>medihub.comment.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>medihub.comment.updated_at</code>.
     */
    public Comment setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>medihub.comment.comment_content</code>.
     */
    public String getCommentContent() {
        return this.commentContent;
    }

    /**
     * Setter for <code>medihub.comment.comment_content</code>.
     */
    public Comment setCommentContent(String commentContent) {
        this.commentContent = commentContent;
        return this;
    }

    /**
     * Getter for <code>medihub.comment.comment_is_deleted</code>.
     */
    public Boolean getCommentIsDeleted() {
        return this.commentIsDeleted;
    }

    /**
     * Setter for <code>medihub.comment.comment_is_deleted</code>.
     */
    public Comment setCommentIsDeleted(Boolean commentIsDeleted) {
        this.commentIsDeleted = commentIsDeleted;
        return this;
    }

    /**
     * Getter for <code>medihub.comment.flag_seq</code>.
     */
    public Long getFlagSeq() {
        return this.flagSeq;
    }

    /**
     * Setter for <code>medihub.comment.flag_seq</code>.
     */
    public Comment setFlagSeq(Long flagSeq) {
        this.flagSeq = flagSeq;
        return this;
    }

    /**
     * Getter for <code>medihub.comment.user_seq</code>.
     */
    public Long getUserSeq() {
        return this.userSeq;
    }

    /**
     * Setter for <code>medihub.comment.user_seq</code>.
     */
    public Comment setUserSeq(Long userSeq) {
        this.userSeq = userSeq;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Comment other = (Comment) obj;
        if (this.commentSeq == null) {
            if (other.commentSeq != null)
                return false;
        }
        else if (!this.commentSeq.equals(other.commentSeq))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.commentContent == null) {
            if (other.commentContent != null)
                return false;
        }
        else if (!this.commentContent.equals(other.commentContent))
            return false;
        if (this.commentIsDeleted == null) {
            if (other.commentIsDeleted != null)
                return false;
        }
        else if (!this.commentIsDeleted.equals(other.commentIsDeleted))
            return false;
        if (this.flagSeq == null) {
            if (other.flagSeq != null)
                return false;
        }
        else if (!this.flagSeq.equals(other.flagSeq))
            return false;
        if (this.userSeq == null) {
            if (other.userSeq != null)
                return false;
        }
        else if (!this.userSeq.equals(other.userSeq))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.commentSeq == null) ? 0 : this.commentSeq.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.commentContent == null) ? 0 : this.commentContent.hashCode());
        result = prime * result + ((this.commentIsDeleted == null) ? 0 : this.commentIsDeleted.hashCode());
        result = prime * result + ((this.flagSeq == null) ? 0 : this.flagSeq.hashCode());
        result = prime * result + ((this.userSeq == null) ? 0 : this.userSeq.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Comment (");

        sb.append(commentSeq);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(deletedAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(commentContent);
        sb.append(", ").append(commentIsDeleted);
        sb.append(", ").append(flagSeq);
        sb.append(", ").append(userSeq);

        sb.append(")");
        return sb.toString();
    }
}
