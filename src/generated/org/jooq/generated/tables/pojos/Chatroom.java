/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Chatroom implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long chatroomSeq;
    private LocalDateTime createdAt;
    private LocalDateTime deletedAt;
    private LocalDateTime updatedAt;
    private String chatroomDefaultName;

    public Chatroom() {}

    public Chatroom(Chatroom value) {
        this.chatroomSeq = value.chatroomSeq;
        this.createdAt = value.createdAt;
        this.deletedAt = value.deletedAt;
        this.updatedAt = value.updatedAt;
        this.chatroomDefaultName = value.chatroomDefaultName;
    }

    public Chatroom(
        Long chatroomSeq,
        LocalDateTime createdAt,
        LocalDateTime deletedAt,
        LocalDateTime updatedAt,
        String chatroomDefaultName
    ) {
        this.chatroomSeq = chatroomSeq;
        this.createdAt = createdAt;
        this.deletedAt = deletedAt;
        this.updatedAt = updatedAt;
        this.chatroomDefaultName = chatroomDefaultName;
    }

    /**
     * Getter for <code>medihub.chatroom.chatroom_seq</code>.
     */
    public Long getChatroomSeq() {
        return this.chatroomSeq;
    }

    /**
     * Setter for <code>medihub.chatroom.chatroom_seq</code>.
     */
    public Chatroom setChatroomSeq(Long chatroomSeq) {
        this.chatroomSeq = chatroomSeq;
        return this;
    }

    /**
     * Getter for <code>medihub.chatroom.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>medihub.chatroom.created_at</code>.
     */
    public Chatroom setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>medihub.chatroom.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    /**
     * Setter for <code>medihub.chatroom.deleted_at</code>.
     */
    public Chatroom setDeletedAt(LocalDateTime deletedAt) {
        this.deletedAt = deletedAt;
        return this;
    }

    /**
     * Getter for <code>medihub.chatroom.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>medihub.chatroom.updated_at</code>.
     */
    public Chatroom setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>medihub.chatroom.chatroom_default_name</code>.
     */
    public String getChatroomDefaultName() {
        return this.chatroomDefaultName;
    }

    /**
     * Setter for <code>medihub.chatroom.chatroom_default_name</code>.
     */
    public Chatroom setChatroomDefaultName(String chatroomDefaultName) {
        this.chatroomDefaultName = chatroomDefaultName;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Chatroom other = (Chatroom) obj;
        if (this.chatroomSeq == null) {
            if (other.chatroomSeq != null)
                return false;
        }
        else if (!this.chatroomSeq.equals(other.chatroomSeq))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.chatroomDefaultName == null) {
            if (other.chatroomDefaultName != null)
                return false;
        }
        else if (!this.chatroomDefaultName.equals(other.chatroomDefaultName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.chatroomSeq == null) ? 0 : this.chatroomSeq.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.chatroomDefaultName == null) ? 0 : this.chatroomDefaultName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Chatroom (");

        sb.append(chatroomSeq);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(deletedAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(chatroomDefaultName);

        sb.append(")");
        return sb.toString();
    }
}
