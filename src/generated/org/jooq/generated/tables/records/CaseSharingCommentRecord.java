/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JCaseSharingComment;
import org.jooq.generated.tables.pojos.CaseSharingComment;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CaseSharingCommentRecord extends UpdatableRecordImpl<CaseSharingCommentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>medihub.case_sharing_comment.case_sharing_comment_seq</code>.
     */
    public CaseSharingCommentRecord setCaseSharingCommentSeq(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>medihub.case_sharing_comment.case_sharing_comment_seq</code>.
     */
    public Long getCaseSharingCommentSeq() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>medihub.case_sharing_comment.created_at</code>.
     */
    public CaseSharingCommentRecord setCreatedAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing_comment.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>medihub.case_sharing_comment.deleted_at</code>.
     */
    public CaseSharingCommentRecord setDeletedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing_comment.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>medihub.case_sharing_comment.updated_at</code>.
     */
    public CaseSharingCommentRecord setUpdatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing_comment.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for
     * <code>medihub.case_sharing_comment.case_sharing_block_id</code>.
     */
    public CaseSharingCommentRecord setCaseSharingBlockId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>medihub.case_sharing_comment.case_sharing_block_id</code>.
     */
    public String getCaseSharingBlockId() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>medihub.case_sharing_comment.case_sharing_comment_content</code>.
     */
    public CaseSharingCommentRecord setCaseSharingCommentContent(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>medihub.case_sharing_comment.case_sharing_comment_content</code>.
     */
    public String getCaseSharingCommentContent() {
        return (String) get(5);
    }

    /**
     * Setter for <code>medihub.case_sharing_comment.case_sharing_seq</code>.
     */
    public CaseSharingCommentRecord setCaseSharingSeq(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing_comment.case_sharing_seq</code>.
     */
    public Long getCaseSharingSeq() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>medihub.case_sharing_comment.user_seq</code>.
     */
    public CaseSharingCommentRecord setUserSeq(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing_comment.user_seq</code>.
     */
    public Long getUserSeq() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CaseSharingCommentRecord
     */
    public CaseSharingCommentRecord() {
        super(JCaseSharingComment.CASE_SHARING_COMMENT);
    }

    /**
     * Create a detached, initialised CaseSharingCommentRecord
     */
    public CaseSharingCommentRecord(Long caseSharingCommentSeq, LocalDateTime createdAt, LocalDateTime deletedAt, LocalDateTime updatedAt, String caseSharingBlockId, String caseSharingCommentContent, Long caseSharingSeq, Long userSeq) {
        super(JCaseSharingComment.CASE_SHARING_COMMENT);

        setCaseSharingCommentSeq(caseSharingCommentSeq);
        setCreatedAt(createdAt);
        setDeletedAt(deletedAt);
        setUpdatedAt(updatedAt);
        setCaseSharingBlockId(caseSharingBlockId);
        setCaseSharingCommentContent(caseSharingCommentContent);
        setCaseSharingSeq(caseSharingSeq);
        setUserSeq(userSeq);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CaseSharingCommentRecord
     */
    public CaseSharingCommentRecord(CaseSharingComment value) {
        super(JCaseSharingComment.CASE_SHARING_COMMENT);

        if (value != null) {
            setCaseSharingCommentSeq(value.getCaseSharingCommentSeq());
            setCreatedAt(value.getCreatedAt());
            setDeletedAt(value.getDeletedAt());
            setUpdatedAt(value.getUpdatedAt());
            setCaseSharingBlockId(value.getCaseSharingBlockId());
            setCaseSharingCommentContent(value.getCaseSharingCommentContent());
            setCaseSharingSeq(value.getCaseSharingSeq());
            setUserSeq(value.getUserSeq());
            resetChangedOnNotNull();
        }
    }
}
