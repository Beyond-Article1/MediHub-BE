/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.AnonymousBoard;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnonymousBoardRecord extends UpdatableRecordImpl<AnonymousBoardRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>medihub.anonymous_board.anonymous_board_seq</code>.
     */
    public AnonymousBoardRecord setAnonymousBoardSeq(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>medihub.anonymous_board.anonymous_board_seq</code>.
     */
    public Long getAnonymousBoardSeq() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>medihub.anonymous_board.created_at</code>.
     */
    public AnonymousBoardRecord setCreatedAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>medihub.anonymous_board.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>medihub.anonymous_board.deleted_at</code>.
     */
    public AnonymousBoardRecord setDeletedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>medihub.anonymous_board.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>medihub.anonymous_board.updated_at</code>.
     */
    public AnonymousBoardRecord setUpdatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>medihub.anonymous_board.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>medihub.anonymous_board.anonymous_board_content</code>.
     */
    public AnonymousBoardRecord setAnonymousBoardContent(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>medihub.anonymous_board.anonymous_board_content</code>.
     */
    public String getAnonymousBoardContent() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>medihub.anonymous_board.anonymous_board_is_deleted</code>.
     */
    public AnonymousBoardRecord setAnonymousBoardIsDeleted(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>medihub.anonymous_board.anonymous_board_is_deleted</code>.
     */
    public Boolean getAnonymousBoardIsDeleted() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>medihub.anonymous_board.anonymous_board_title</code>.
     */
    public AnonymousBoardRecord setAnonymousBoardTitle(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>medihub.anonymous_board.anonymous_board_title</code>.
     */
    public String getAnonymousBoardTitle() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>medihub.anonymous_board.anonymous_board_view_count</code>.
     */
    public AnonymousBoardRecord setAnonymousBoardViewCount(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>medihub.anonymous_board.anonymous_board_view_count</code>.
     */
    public Long getAnonymousBoardViewCount() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>medihub.anonymous_board.user_seq</code>.
     */
    public AnonymousBoardRecord setUserSeq(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>medihub.anonymous_board.user_seq</code>.
     */
    public Long getUserSeq() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnonymousBoardRecord
     */
    public AnonymousBoardRecord() {
        super(AnonymousBoard.ANONYMOUS_BOARD);
    }

    /**
     * Create a detached, initialised AnonymousBoardRecord
     */
    public AnonymousBoardRecord(Long anonymousBoardSeq, LocalDateTime createdAt, LocalDateTime deletedAt, LocalDateTime updatedAt, String anonymousBoardContent, Boolean anonymousBoardIsDeleted, String anonymousBoardTitle, Long anonymousBoardViewCount, Long userSeq) {
        super(AnonymousBoard.ANONYMOUS_BOARD);

        setAnonymousBoardSeq(anonymousBoardSeq);
        setCreatedAt(createdAt);
        setDeletedAt(deletedAt);
        setUpdatedAt(updatedAt);
        setAnonymousBoardContent(anonymousBoardContent);
        setAnonymousBoardIsDeleted(anonymousBoardIsDeleted);
        setAnonymousBoardTitle(anonymousBoardTitle);
        setAnonymousBoardViewCount(anonymousBoardViewCount);
        setUserSeq(userSeq);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AnonymousBoardRecord
     */
    public AnonymousBoardRecord(org.jooq.generated.tables.pojos.AnonymousBoard value) {
        super(AnonymousBoard.ANONYMOUS_BOARD);

        if (value != null) {
            setAnonymousBoardSeq(value.getAnonymousBoardSeq());
            setCreatedAt(value.getCreatedAt());
            setDeletedAt(value.getDeletedAt());
            setUpdatedAt(value.getUpdatedAt());
            setAnonymousBoardContent(value.getAnonymousBoardContent());
            setAnonymousBoardIsDeleted(value.getAnonymousBoardIsDeleted());
            setAnonymousBoardTitle(value.getAnonymousBoardTitle());
            setAnonymousBoardViewCount(value.getAnonymousBoardViewCount());
            setUserSeq(value.getUserSeq());
            resetChangedOnNotNull();
        }
    }
}
