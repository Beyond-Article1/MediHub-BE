/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JComment;
import org.jooq.generated.tables.pojos.Comment;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>medihub.comment.comment_seq</code>.
     */
    public CommentRecord setCommentSeq(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>medihub.comment.comment_seq</code>.
     */
    public Long getCommentSeq() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>medihub.comment.created_at</code>.
     */
    public CommentRecord setCreatedAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>medihub.comment.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>medihub.comment.deleted_at</code>.
     */
    public CommentRecord setDeletedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>medihub.comment.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>medihub.comment.updated_at</code>.
     */
    public CommentRecord setUpdatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>medihub.comment.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>medihub.comment.comment_content</code>.
     */
    public CommentRecord setCommentContent(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>medihub.comment.comment_content</code>.
     */
    public String getCommentContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>medihub.comment.comment_is_deleted</code>.
     */
    public CommentRecord setCommentIsDeleted(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>medihub.comment.comment_is_deleted</code>.
     */
    public Boolean getCommentIsDeleted() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>medihub.comment.flag_seq</code>.
     */
    public CommentRecord setFlagSeq(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>medihub.comment.flag_seq</code>.
     */
    public Long getFlagSeq() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>medihub.comment.user_seq</code>.
     */
    public CommentRecord setUserSeq(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>medihub.comment.user_seq</code>.
     */
    public Long getUserSeq() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(JComment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Long commentSeq, LocalDateTime createdAt, LocalDateTime deletedAt, LocalDateTime updatedAt, String commentContent, Boolean commentIsDeleted, Long flagSeq, Long userSeq) {
        super(JComment.COMMENT);

        setCommentSeq(commentSeq);
        setCreatedAt(createdAt);
        setDeletedAt(deletedAt);
        setUpdatedAt(updatedAt);
        setCommentContent(commentContent);
        setCommentIsDeleted(commentIsDeleted);
        setFlagSeq(flagSeq);
        setUserSeq(userSeq);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Comment value) {
        super(JComment.COMMENT);

        if (value != null) {
            setCommentSeq(value.getCommentSeq());
            setCreatedAt(value.getCreatedAt());
            setDeletedAt(value.getDeletedAt());
            setUpdatedAt(value.getUpdatedAt());
            setCommentContent(value.getCommentContent());
            setCommentIsDeleted(value.getCommentIsDeleted());
            setFlagSeq(value.getFlagSeq());
            setUserSeq(value.getUserSeq());
            resetChangedOnNotNull();
        }
    }
}
