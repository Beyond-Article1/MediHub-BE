/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JCaseSharing;
import org.jooq.generated.tables.pojos.CaseSharing;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CaseSharingRecord extends UpdatableRecordImpl<CaseSharingRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>medihub.case_sharing.case_sharing_seq</code>.
     */
    public CaseSharingRecord setCaseSharingSeq(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.case_sharing_seq</code>.
     */
    public Long getCaseSharingSeq() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>medihub.case_sharing.created_at</code>.
     */
    public CaseSharingRecord setCreatedAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>medihub.case_sharing.deleted_at</code>.
     */
    public CaseSharingRecord setDeletedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>medihub.case_sharing.case_sharing_content</code>.
     */
    public CaseSharingRecord setCaseSharingContent(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.case_sharing_content</code>.
     */
    public String getCaseSharingContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>medihub.case_sharing.case_sharing_is_draft</code>.
     */
    public CaseSharingRecord setCaseSharingIsDraft(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.case_sharing_is_draft</code>.
     */
    public Boolean getCaseSharingIsDraft() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>medihub.case_sharing.case_sharing_is_latest</code>.
     */
    public CaseSharingRecord setCaseSharingIsLatest(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.case_sharing_is_latest</code>.
     */
    public Boolean getCaseSharingIsLatest() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>medihub.case_sharing.case_sharing_title</code>.
     */
    public CaseSharingRecord setCaseSharingTitle(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.case_sharing_title</code>.
     */
    public String getCaseSharingTitle() {
        return (String) get(6);
    }

    /**
     * Setter for <code>medihub.case_sharing.case_sharing_view_count</code>.
     */
    public CaseSharingRecord setCaseSharingViewCount(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.case_sharing_view_count</code>.
     */
    public Long getCaseSharingViewCount() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>medihub.case_sharing.case_sharing_group_seq</code>.
     */
    public CaseSharingRecord setCaseSharingGroupSeq(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.case_sharing_group_seq</code>.
     */
    public Long getCaseSharingGroupSeq() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>medihub.case_sharing.part_seq</code>.
     */
    public CaseSharingRecord setPartSeq(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.part_seq</code>.
     */
    public Long getPartSeq() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>medihub.case_sharing.template_seq</code>.
     */
    public CaseSharingRecord setTemplateSeq(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.template_seq</code>.
     */
    public Long getTemplateSeq() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>medihub.case_sharing.user_seq</code>.
     */
    public CaseSharingRecord setUserSeq(Long value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>medihub.case_sharing.user_seq</code>.
     */
    public Long getUserSeq() {
        return (Long) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CaseSharingRecord
     */
    public CaseSharingRecord() {
        super(JCaseSharing.CASE_SHARING);
    }

    /**
     * Create a detached, initialised CaseSharingRecord
     */
    public CaseSharingRecord(Long caseSharingSeq, LocalDateTime createdAt, LocalDateTime deletedAt, String caseSharingContent, Boolean caseSharingIsDraft, Boolean caseSharingIsLatest, String caseSharingTitle, Long caseSharingViewCount, Long caseSharingGroupSeq, Long partSeq, Long templateSeq, Long userSeq) {
        super(JCaseSharing.CASE_SHARING);

        setCaseSharingSeq(caseSharingSeq);
        setCreatedAt(createdAt);
        setDeletedAt(deletedAt);
        setCaseSharingContent(caseSharingContent);
        setCaseSharingIsDraft(caseSharingIsDraft);
        setCaseSharingIsLatest(caseSharingIsLatest);
        setCaseSharingTitle(caseSharingTitle);
        setCaseSharingViewCount(caseSharingViewCount);
        setCaseSharingGroupSeq(caseSharingGroupSeq);
        setPartSeq(partSeq);
        setTemplateSeq(templateSeq);
        setUserSeq(userSeq);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CaseSharingRecord
     */
    public CaseSharingRecord(CaseSharing value) {
        super(JCaseSharing.CASE_SHARING);

        if (value != null) {
            setCaseSharingSeq(value.getCaseSharingSeq());
            setCreatedAt(value.getCreatedAt());
            setDeletedAt(value.getDeletedAt());
            setCaseSharingContent(value.getCaseSharingContent());
            setCaseSharingIsDraft(value.getCaseSharingIsDraft());
            setCaseSharingIsLatest(value.getCaseSharingIsLatest());
            setCaseSharingTitle(value.getCaseSharingTitle());
            setCaseSharingViewCount(value.getCaseSharingViewCount());
            setCaseSharingGroupSeq(value.getCaseSharingGroupSeq());
            setPartSeq(value.getPartSeq());
            setTemplateSeq(value.getTemplateSeq());
            setUserSeq(value.getUserSeq());
            resetChangedOnNotNull();
        }
    }
}
