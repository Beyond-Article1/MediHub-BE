/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JMedicalLife;
import org.jooq.generated.tables.pojos.MedicalLife;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MedicalLifeRecord extends UpdatableRecordImpl<MedicalLifeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>medihub.medical_life.medical_life_seq</code>.
     */
    public MedicalLifeRecord setMedicalLifeSeq(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>medihub.medical_life.medical_life_seq</code>.
     */
    public Long getMedicalLifeSeq() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>medihub.medical_life.created_at</code>.
     */
    public MedicalLifeRecord setCreatedAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>medihub.medical_life.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>medihub.medical_life.deleted_at</code>.
     */
    public MedicalLifeRecord setDeletedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>medihub.medical_life.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>medihub.medical_life.updated_at</code>.
     */
    public MedicalLifeRecord setUpdatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>medihub.medical_life.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>medihub.medical_life.medical_life_content</code>.
     */
    public MedicalLifeRecord setMedicalLifeContent(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>medihub.medical_life.medical_life_content</code>.
     */
    public String getMedicalLifeContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>medihub.medical_life.medical_life_is_deleted</code>.
     */
    public MedicalLifeRecord setMedicalLifeIsDeleted(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>medihub.medical_life.medical_life_is_deleted</code>.
     */
    public Boolean getMedicalLifeIsDeleted() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>medihub.medical_life.medical_life_title</code>.
     */
    public MedicalLifeRecord setMedicalLifeTitle(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>medihub.medical_life.medical_life_title</code>.
     */
    public String getMedicalLifeTitle() {
        return (String) get(6);
    }

    /**
     * Setter for <code>medihub.medical_life.medical_life_view_count</code>.
     */
    public MedicalLifeRecord setMedicalLifeViewCount(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>medihub.medical_life.medical_life_view_count</code>.
     */
    public Long getMedicalLifeViewCount() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>medihub.medical_life.user_seq</code>.
     */
    public MedicalLifeRecord setUserSeq(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>medihub.medical_life.user_seq</code>.
     */
    public Long getUserSeq() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MedicalLifeRecord
     */
    public MedicalLifeRecord() {
        super(JMedicalLife.MEDICAL_LIFE);
    }

    /**
     * Create a detached, initialised MedicalLifeRecord
     */
    public MedicalLifeRecord(Long medicalLifeSeq, LocalDateTime createdAt, LocalDateTime deletedAt, LocalDateTime updatedAt, String medicalLifeContent, Boolean medicalLifeIsDeleted, String medicalLifeTitle, Long medicalLifeViewCount, Long userSeq) {
        super(JMedicalLife.MEDICAL_LIFE);

        setMedicalLifeSeq(medicalLifeSeq);
        setCreatedAt(createdAt);
        setDeletedAt(deletedAt);
        setUpdatedAt(updatedAt);
        setMedicalLifeContent(medicalLifeContent);
        setMedicalLifeIsDeleted(medicalLifeIsDeleted);
        setMedicalLifeTitle(medicalLifeTitle);
        setMedicalLifeViewCount(medicalLifeViewCount);
        setUserSeq(userSeq);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MedicalLifeRecord
     */
    public MedicalLifeRecord(MedicalLife value) {
        super(JMedicalLife.MEDICAL_LIFE);

        if (value != null) {
            setMedicalLifeSeq(value.getMedicalLifeSeq());
            setCreatedAt(value.getCreatedAt());
            setDeletedAt(value.getDeletedAt());
            setUpdatedAt(value.getUpdatedAt());
            setMedicalLifeContent(value.getMedicalLifeContent());
            setMedicalLifeIsDeleted(value.getMedicalLifeIsDeleted());
            setMedicalLifeTitle(value.getMedicalLifeTitle());
            setMedicalLifeViewCount(value.getMedicalLifeViewCount());
            setUserSeq(value.getUserSeq());
            resetChangedOnNotNull();
        }
    }
}
