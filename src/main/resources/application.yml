springdoc:
  swagger-ui:
    path: /swagger-ui/index.html  # 경로 수정
    groups-order: DESC
    tags-sorter: alpha
    operations-sorter: method
  api-docs:
    path: /v3/api-docs

server:
  port: 8088
  
spring:
  config:
    import:
    - "classpath:application-key.properties"
    - "classpath:prompt.yml"

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://${mariadb.host}:${mariadb.port}/${db.name}
    username: ${db.name}
    password: ${db.password}

  profiles:
    include: aws

  jpa:
    hibernate:
      dialect: org.hibernate.dialect.MariaDBDialect
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

    show-sql: true
    properties:
      hibernate:
        format_sql: true

  servlet:
    multipart:
      enabled: true
      file-size-threshold: 1MB
      max-file-size: 300MB
      max-request-size: 300MB
  # MongoDB 설정
  data:
    mongodb:
      uri: mongodb://${db.name}:${db.password}@${mongodb.host}:${mongodb.port.number}/${db.name}?authSource=admin
      database: ${db.name}
      username: ${db.name}
      password: ${db.password}

    redis:
      host: ${redis.host}
      port: ${redis.port}
      password: ${db.password}

    elasticsearch:
      repositories:
        enabled: true

  web:
    resources:
      add-mappings: false # Disable static resource mapping (For NoHandlerFoundException), 스태틱 파일을 뒤져 보는 것을 방지

    # 엘라스틱서치 최초 설치 시 기본 계정
  elasticsearch:
    uris: ${elastic_uris}
    username: ${elastic_user}
    password: ${elastic_password}
    anonymous-board:
      index:
        name: anonymous_board
    case-sharing:
      index:
        name: case_sharing
    cp:
      index:
        name: cp
    journal:
      index:
        name: journal
    medical-life:
      index:
        name: medical_life
    user:
      index:
        name: user

  logstash:
    enabled: false
    destination:
      host: ${logstash_host_name}
      port: 5000

  #  logback.xml 사용 여부 결정
  logging:
    use-logback: false
    level:
      mediHub_be: DEBUG

#logging:
#  level:
#    root: info
#    mediHub_be: debug

token:
  expiration_time: 7200000
  refresh.token.expiration_time: 604800000
  secret: ${SECRET_KEY}

user:
  default-password: ${user.default-password}

# jOOQ 결과 확인을 위한 로그 레벨 설정
logging:
  level:
    org:
      jooq:
        tools:
          LoggerListener: debug

# health check
management:
  endpoints:
    web:
      exposure:
        include: "health"
  endpoint:
    health:
      path: /actuator/health  # 기본 경로를 설정
