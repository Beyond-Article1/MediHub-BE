plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.cloud.tools.jib' version '3.3.2' // Jib 플러그인
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'


    // MockMvc와 REST 테스트를 위한 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-test'

    // JSON 테스트 지원 (예: 응답 JSON 검증)
    testImplementation 'com.jayway.jsonpath:json-path:2.8.0'

    // Mockito: 서비스 계층 테스트를 위한 Mocking 라이브러리
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'

    // AssertJ: Fluent 스타일로 테스트를 작성
    testImplementation 'org.assertj:assertj-core:3.24.2'

    // Env 설정
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'

}

// .env 파일 로드
def loadEnv() {
    def envFile = file('.env')
    if (envFile.exists()) {
        envFile.eachLine { line ->
            def (key, value) = line.split('=', 2)
            if (key && value) {
                project.ext.set(key.trim(), value.trim())
            }
        }
    }
}

// .env 파일 읽기
loadEnv()


//jib {
//    from {
//        image = 'openjdk:17.0.2-slim' // 베이스 이미지 지정
//    }
//    to {
//        image = "${project.ext.get('DOCKER_USERNAME') ?: 'default-user'}/medihub" // .env 파일에서 DOCKER_USERNAME 사용
//        auth {
//            username = project.ext.get('DOCKER_USERNAME') ?: 'default-user'
//            password = project.ext.get('DOCKER_PASSWORD') ?: 'default-password'
//        }
//    }
//    container {
//        ports = ['8088'] // 컨테이너 포트
//        jvmFlags = ["-Xms512m", "-Xmx512m"]
//        creationTime = "USE_CURRENT_TIMESTAMP"
//    }
//}

test {
    useJUnitPlatform()
}