version: '3.8'
services:
  mediHub_db:
    image: mariadb:latest
    container_name: mediHub_db
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3309:3306"
    volumes:
      - db_data:/var/lib/mysql
 # my-app:
  #  image: ${DOCKER_USERNAME}/medihub:latest
  #  container_name: medihub
  #  restart: always
  #  environment:
    #  DB_PORT: ${DB_PORT}
    #  DB_NAME: ${DB_NAME}
    #  DB_USER: ${DB_USER}
    #  DB_PASSWORD: ${DB_PASSWORD}
   # ports:
    #  - "8089:8088" # 호스트 포트:컨테이너 내부 포트
    # depends_on:
     # - mediHub_db
    # networks:
     # - springboot-network
    # command: ["/wait-for-it.sh", "mariadb:3306", "java", "-jar", "app.jar"]

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${DB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}

    volumes:
      - mongo_data:/data/db
    networks:
      - springboot-network

  redis:
    image: redis:latest
    restart: always
    container_name: redis
    hostname: ${DB_DATABASE}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - springboot-network
    command: redis-server --requirepass ${DB_PASSWORD}

  kafka:
    image: bitnami/kafka:latest
    restart: unless-stopped
    container_name: kafka
    ports:
      - "9092:9092" # 내부 네트워크 통신을 위한 PLAINTEXT Listener
      - "10000:10000" # 외부 접근을 위한 EXTERNAL Listener
    environment:
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # KRaft settings
      - KAFKA_CFG_BROKER_ID=0
      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw # Broker가 여러개일 경우 설정
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:10000
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092, EXTERNAL://localhost:10000
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - kafka-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "9091:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - kafka-net

networks:
  springboot-network:
    driver: bridge
  kafka-net:
    driver: bridge

volumes:
  db_data:
  mongo_data:
